resources:
- repo: self
queue:
  name: Hosted Ubuntu 1604
#Your build pipeline references an undefined variable named ‘curl 0.0.0.0:88/’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
#Your build pipeline references an undefined variable named ‘curl -X POST 0.0.0.0:88/test’. Create or edit the build pipeline for this YAML file, define the variable on the Variables tab. See https://go.microsoft.com/fwlink/?linkid=865972
steps:
- bash: ./downloadblob.sh
  arguments: '''blobstoragedevopscloud'  'security key' 'ai-devops-storage' 'classifier.h5' '

  displayName: 'Bash Script'

- task: Docker@1
  displayName: 'Build an image'
  inputs:
    azureSubscriptionEndpoint: 'Free Trial (ce84b2d8-bd07-448c-9bf7-fef16ea77f61)'

    azureContainerRegistry: aidevopscloud.azurecr.io

    dockerFile: flaskwebapp/dockerfile

    imageName: 'aidevopscloud.azurecr.io/devopsai:$(Build.BuildId)'


- script: |
   echo "Starting model-api container"
   docker run -d -p 88:88 aidevopscloud.azurecr.io/devopsai:$(Build.BuildId)
   
   docker ps -a
  displayName: 'Starting Model API Container'

- script: |
   sleep 20
   
   echo "Testing API"
   reply=$(curl 0.0.0.0:88/)
   
   docker ps -a
   
   if [[ $reply == "Healthy" ]]; then
   echo -e "Successfully validated version API call"
   else
   echo "Basic API call failed"
   exit 1
   fi
  displayName: 'Test Connection to Container'

- script: |
   echo "Testing model"
   
   reply=$(curl -X POST 0.0.0.0:88/test)
   
   echo $reply
   
   if [[ $reply == *"dog"* ]]; then echo "Correctly identified dog"; else echo "Could not identify dog" exit 1; fi
   
  displayName: 'Model Test'

- task: Docker@1
  displayName: 'Push Model API'
  inputs:
    azureSubscriptionEndpoint: 'Free Trial (ce84b2d8-bd07-448c-9bf7-fef16ea77f61)'

    azureContainerRegistry: aidevopscloud.azurecr.io

    command: 'Push an image'

    imageName: 'aidevopscloud.azurecr.io/devopsai:$(Build.BuildId)'


- task: CopyFiles@2
  displayName: 'Copy Files '
  inputs:
    SourceFolder: '$(build.sourcesdirectory)'

    Contents: '**/*'

    TargetFolder: '$(build.artifactstagingdirectory)'


- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'


